.TH semaphore 3 "22 de Noviembre de 2006" "Versión 1.0" "Minix programmer's manual"

.SH NOMBRE

.B semaphore
\- Biblioteca que implementa semáforos en Minix.

.SH SINOPSIS
.B #include <semaphore.h>

.B int sem_close(sem_t *sem);

.B int sem_destroy(sem_t *sem);

.B int sem_getvalue(sem_t *sem, int *sval);

.B int sem_init(sem_t *sem, int pshared, unsigned int value);

.B sem_t *sem_open(const char *name, int oflag);

.B sem_t *sem_open(const char *name, int oflag, mode_t mode, unsigned int value);

.B int sem_post(sem_t *sem);

.B int sem_trywait(sem_t *sem);

.B int sem_unlink(const char *name);

.B int sem_wait(sem_t *sem);

.SH DESCRIPCION
Las funciones de semáforo permiten hacer operaciones seguras sobre recursos compartidos. Vea las páginas individuales para descripciones más detalladas sobre cada función. Un semáforo es un número entero que nunca toma valores negativos. Sobre él se pueden realizar 2 operaciones básicas: incrementar en uno (con la función sem_post) y decrementar en uno (con la función sem_wait). Si el semáforo vale cero al llamar a sem_wait, el proceso se bloquea hasta que el semáforo incremente su valor.

POSIX define dos tipos de semáforos: con y sin nombre.

Los semáforos con nombre se pueden identificar con una cadena de la forma /nombre. Dos o más procesos pueden esperar en el mismo semáforo usando la misma cadena al llamar a la función sem_open.

.SH VER TAMBIÉN
.B sem_close
(3),
.B sem_destroy
(3),
.B sem_getvalue
(3), 
.B sem_init
(3), 
.B sem_open
(3),
.B sem_post
(3), 
.B sem_timedwait
(3), 
.B sem_trywait
(3), 
.B sem_unlink
(3),
.B sem_wait
(3) 

